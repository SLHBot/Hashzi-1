/* ‡∂ã‡∑É‡∑ä‡∑É‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è ‡∂∂‡∑ö‡∑É‡∑í‡∂ö‡∑ô ‡∂ö‡∑ú‡∂Ω‡∑ä‡∂Ω‡∑ú ‡∂Ö‡∑Ñ‡∂Ω‡∑è ‡∂ú‡∂±‡∑í‡∂∏‡∑ä
Codded BY Hirusha Dayarathne
Wa.me/+94755681782
*/

const Asena = require('../events');
const Config = require('../config');
const { MessageType, MessageOptions, Mimetype } = require('@adiwajshing/baileys');
const fs = require('fs');
const axios = require('axios');

const Language = require('../language');
const Lang = Language.getString('conventer');
const XN_N = "```‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ùîªùï†ùï®ùïüùïùùï†ùïíùïïùïöùïüùïò...```"
const XN_D = "```üì•‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ùïåùï°ùïùùï†ùïíùïïùïöùïüùïò...```"
const NEED_WORD = "*‡∂î‡∂∂ üì•‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö URL ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫*"


Asena.addCommand({ on: 'text', fromMe: false, deleteCommand: false }, (async (message, match) => {
    var antilink_var = 'true'

    var ldc = ''
    if (Config.LANG == 'AZ') ldc = '*Baƒülantƒ± A≈ükarlandƒ±!*'
    if (Config.LANG == 'TR') ldc = '*‚ÄéLink Tespit Edildi!*'
    if (Config.LANG == 'EN') ldc = '*Link Found!*'
    if (Config.LANG == 'ML') ldc = '*‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡¥ø!*'
    if (Config.LANG == 'ID') ldc = '*Tautan Terdeteksi!*'
    if (Config.LANG == 'PT') ldc = '*Link Detectado!*'
    if (Config.LANG == 'RU') ldc = '*–°—Å—ã–ª–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!*'
    if (Config.LANG == 'HI') ldc = '*‡§≤‡§ø‡§Ç‡§ï ‡§ï‡§æ ‡§™‡§§‡§æ ‡§ö‡§≤‡§æ!*'
    if (Config.LANG == 'ES') ldc = '*Enlace Detectado!*'
    if (antilink_var == 'true' && message.jid !== '905511384572-1616356915@g.us') {
        let regex1 = new RegExp('http://')
        let regex2 = new RegExp('https://')
        if (regex1.test(message.message)) {
            await message.client.sendMessage(message.jid, ldc, MessageType.text, { quoted: message.data })
        }
        else if (regex2.test(message.message)) {
            await message.client.sendMessage(message.jid, ldc, MessageType.text, { quoted: message.data })
        }
        else if (message.message.match(/((?:[.]com)\b)/i)) {
            await message.client.sendMessage(message.jid, ldc, MessageType.text, { quoted: message.data })
        }
    }
}));
